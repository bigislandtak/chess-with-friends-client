[{"/Users/takeyuki/src/bigislandtak/chess-online/client/src/index.js":"1","/Users/takeyuki/src/bigislandtak/chess-online/client/src/reportWebVitals.js":"2","/Users/takeyuki/src/bigislandtak/chess-online/client/src/App.js":"3","/Users/takeyuki/src/bigislandtak/chess-online/client/src/Home/Home.js":"4","/Users/takeyuki/src/bigislandtak/chess-online/client/src/GameRoom/GameRoom.js":"5","/Users/takeyuki/src/bigislandtak/chess-online/client/src/GameRoom/Board.jsx":"6","/Users/takeyuki/src/bigislandtak/chess-online/client/src/GameRoom/Square.jsx":"7","/Users/takeyuki/src/bigislandtak/chess-online/client/src/GameRoom/Piece.jsx":"8","/Users/takeyuki/src/bigislandtak/chess-online/client/src/GameRoom/useSocket.js":"9"},{"size":500,"mtime":1609887493527,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1610058521649,"results":"12","hashOfConfig":"11"},{"size":427,"mtime":1610137579970,"results":"13","hashOfConfig":"11"},{"size":654,"mtime":1610085954164,"results":"14","hashOfConfig":"11"},{"size":2753,"mtime":1610439171948,"results":"15","hashOfConfig":"11"},{"size":1337,"mtime":1610351328187,"results":"16","hashOfConfig":"11"},{"size":1973,"mtime":1610351328120,"results":"17","hashOfConfig":"11"},{"size":822,"mtime":1610344793505,"results":"18","hashOfConfig":"11"},{"size":3203,"mtime":1610356171272,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"13y9cq0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/takeyuki/src/bigislandtak/chess-online/client/src/index.js",[],["41","42"],"/Users/takeyuki/src/bigislandtak/chess-online/client/src/reportWebVitals.js",[],"/Users/takeyuki/src/bigislandtak/chess-online/client/src/App.js",[],"/Users/takeyuki/src/bigislandtak/chess-online/client/src/Home/Home.js",[],"/Users/takeyuki/src/bigislandtak/chess-online/client/src/GameRoom/GameRoom.js",[],"/Users/takeyuki/src/bigislandtak/chess-online/client/src/GameRoom/Board.jsx",["43","44"],"import React, { useState, useContext } from \"react\";\nimport { GameRoomContext } from \"./GameRoom\";\nimport Square from \"./Square\";\n\nconst Board = (props) => {\n    console.log(\"Board rendered\")\n\n    const context = useContext(GameRoomContext);\n\n    const getCoordinates = (squareIdx) => {\n        const x = (props.playerColor === 'w')? squareIdx % 8 : Math.abs(squareIdx % 8 - 7);\n        const y = (props.playerColor === 'w')? Math.abs(Math.floor(squareIdx / 8) - 7) : Math.floor(squareIdx / 8);\n        return [x, y];\n    };\n\n    const getSquarePosition = (squareIdx) => {\n        const cols = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n        const [x, y] = getCoordinates(squareIdx);\n        return `${cols[x]}${y + 1}`;\n    };\n    \n    const getSquareColor = (squareIdx) => {\n        const [x, y] = getCoordinates(squareIdx);\n        const color = ((x + y) % 2 === 0)? 'b' : 'w';\n        return color;\n    };\n    \n    const pieces = props.board.map((piece, squareIdx) =>\n        <div key={squareIdx} className=\"square-container\">\n            <Square \n                piece={piece} \n                color={getSquareColor(squareIdx)} \n                position={getSquarePosition(squareIdx)}\n                move={props.move}\n                history={props.history}\n                // squareIdx={squareIdx} \n                // onClickPiece={handleClickPiece(squareIdx)}\n                // onClickSquare={handleClickSquare}\n                // style={{\n                //     border: states.borders[squareIdx]\n                // }}\n            />\n        </div>\n    );\n\n    return (\n        <div className=\"board\">\n            {pieces}\n        </div>\n    );\n};\n\nexport default Board;","/Users/takeyuki/src/bigislandtak/chess-online/client/src/GameRoom/Square.jsx",["45","46"],"import React from \"react\";\nimport Piece from \"./Piece\";\nimport { useDrop } from \"react-dnd\";\n\nconst LIGHT = \" #f0f0b4\";\nconst DARK = \"#6f8f4f\";\nconst LAST_MOVE_LIGHT = \"#dbdb8f\";\nconst LAST_MOVE_DARK = \"#96a152\";\n\nconst Square = (props) => {\n    const className = (props.color === 'b')? \"square-dark\" : \"square-light\";\n    const squareColor = (props.color === 'b')? DARK : LIGHT;\n    const activeSquareColor = (props.color === 'b')? LAST_MOVE_DARK : LAST_MOVE_LIGHT;\n\n    const [{ isOver }, drop] = useDrop({\n        accept: \"piece\",\n        drop: (item) => {\n            const [from] = item.id.split('_');\n            const move = { from: from, to: props.position };\n            const moves = props.getMoves();\n            for (let i = 0; i < moves.length; i++) {\n                if (move.from === moves[i].from && move.to === moves[i].to) {\n                    const sound = (moves[i].flags === 'c')? new Audio(\"/sounds/capture.mp3\") : new Audio(\"/sounds/move.mp3\");\n                    sound.play();\n                }\n            }\n            props.move(move);\n        },\n        collect: (monitor) => {\n            return { isOver: !!monitor.isOver() };\n        }\n    });\n\n    const piece = (props.piece)? <Piece piece={props.piece} position={props.position} activeSquareColor={activeSquareColor} /> : <div>&nbsp;</div>;\n    \n    const lastMoveFrom = props.history.length > 0 && props.history[props.history.length - 1].from;\n    const lastMoveTo = props.history.length > 0 && props.history[props.history.length - 1].to;\n    \n    return (\n        <div \n            className={className} \n            ref={drop} \n            style={{ \n                backgroundColor: (lastMoveFrom === props.position || lastMoveTo === props.position)? activeSquareColor : squareColor, \n                opacity: isOver? 0.75 : 1, \n                // border: isOver? \"1px solid white\" : \"none\" \n            }}\n        >\n            {piece}\n        </div>\n    );\n};\n\nexport default Square;","/Users/takeyuki/src/bigislandtak/chess-online/client/src/GameRoom/Piece.jsx",[],"/Users/takeyuki/src/bigislandtak/chess-online/client/src/GameRoom/useSocket.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"55","line":8,"column":11,"nodeType":"53","messageId":"54","endLine":8,"endColumn":18},{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"56","line":7,"column":7,"nodeType":"53","messageId":"54","endLine":7,"endColumn":16},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'context' is assigned a value but never used.","'LAST_MOVE' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]